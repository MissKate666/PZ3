from fuzzywuzzy import fuzz
from fuzzywuzzy import process
#обычное сравнение
a = fuzz.ratio('Привет мир', 'Привет мир')
print(a)
#обычное сравнение, но с другими символами
a = fuzz.ratio('Привет мир', 'Привт кир')
print(a)
#Частичное сравнение
a = fuzz.partial_ratio('Привет мир', 'Привет мир!')
print(a)
# еще один вариант частичного сравнения
a = fuzz.partial_ratio('Привет мир', 'Люблю колбасу, Привет мир')
print(a)
#частичное сравнение с учетом регистра
a = fuzz.partial_ratio('Привет мир', 'Люблю колбасу, привет мир')
print(a)

#Сравнение по токену
#Token Sort Ratio. Слова сравниваются друг с другом, независимо от регистра или порядка
a = fuzz.token_sort_ratio('Привет наш мир', 'мир наш Привет')
print(a)
a = fuzz.token_sort_ratio('Привет наш мир', 'мир наш любимый Привет')
print(a)
a = fuzz.token_sort_ratio('1 2 Привет наш мир', '1 мир наш 2 ПриВЕт')
print(a)
#Token Set Ratio. Это сравнение, в отличие от прошлого, приравнивает строки, если их отличие заключается в повторении слов.
a = fuzz.token_set_ratio('Привет наш мир', 'мир мир наш наш наш ПриВЕт')
print(a)

#Продвинутое обычное сравнение
#WRatio учитывает регистр букв и знаки препинания (не делящие строку)
a = fuzz.WRatio('Привет наш мир', '!ПриВЕт наш мир!')
print(a)
a = fuzz.WRatio('Привет наш мир', '!ПриВЕт, наш мир!')
print(a)

#Работа со списком
#Для сравнения строки со строками из списка используется модуль process
city = ["Москва", "Санкт-Петербург", "Саратов", "Краснодар", "Воронеж", "Омск", "Екатеринбург", "Орск", "Красногорск", "Красноярск", "Самара"]
a = process.extract("Саратов", city, limit=2)
# Параметр limit по умолчанию имеет значение 5
print(a)
#Если необходим только первый в списке, то лучше использовать extractOne
city = ["Москва", "Санкт-Петербург", "Саратов", "Краснодар", "Воронеж", "Омск", "Екатеринбург", "Орск", "Красногорск", "Красноярск", "Самара"]
a = process.extractOne("Краногрск", city)
print(a)
